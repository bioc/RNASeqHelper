% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnaseqhelper.R
\name{do_gene_plots}
\alias{do_gene_plots}
\title{Perform Gene Plots}
\usage{
do_gene_plots(
    norm_counts,
    scale_mat,
    pheno_data,
    gene_cluster_scores,
    score_thresh,
    genes_of_interest,
    out_dir
)
}
\arguments{
\item{norm_counts}{a matrix of normalized count data, with genes as
rows and samples as columns.}

\item{scale_mat}{a matrix of scaled count data, with genes as rows
and samples as columns.}

\item{pheno_data}{a data.frame of phenotype data.}

\item{gene_cluster_scores}{A data frame with three columns: 'gene',
'cluster', and 'scores'.}

\item{score_thresh}{Vector of numerics depicting cluster score
thresholds to filter for high quality genes in each cluster
before plotting. Default is \code{c(0, 0.5, 0.9, 0.99)}}

\item{genes_of_interest}{A named list of gene vectors. A list of
genes which are referenced by specific names. Unique plots will
be generated for list. e.g. list(mygeneset1 = c("Msgn1",
"Osr1", "Rspo3", "Fgf8", "Wnt3a"), mygeneset2 = c("Mesp1",
"Foxa2", "Sox17", "Lhx1", "Cer1"))}

\item{out_dir}{A string denoting the output directory to store
plots and tables.}
}
\value{
None.
}
\description{
Perform cluster gene plots for normalised and scaled
data as well as plotting genes of interest for both.
}
\examples{
ngenes <- 100
nsamples <- 6
norm_counts <- matrix(rnorm(ngenes * nsamples, mean = 5), nrow = ngenes)
rownames(norm_counts) <- paste0("G", 1:ngenes)
colnames(norm_counts) <- paste0("S", 1:nsamples)
scale_mat <- matrix(rnorm(ngenes * nsamples, mean = 0), nrow = ngenes)
rownames(scale_mat) <- rownames(norm_counts)
colnames(scale_mat) <- colnames(norm_counts)
pheno <- data.frame(
    sample = colnames(scale_mat),
    condition = c(rep("red", nsamples / 2), rep("green", nsamples / 2)),
    time = as.integer(rnorm(nsamples, 2, 0.5) + 1) * 5
)
gene_cluster_scores <- data.frame(
    gene = rownames(scale_mat),
    cluster = c(rep(1, ngenes / 50), rep(2, ngenes / 50)),
    score = rnorm(ngenes, 0.5, 0.25)
)
score_thresh <- c(0.2, 0.3)
genes_of_interest <- paste0("G", 5:15)
res <- do_gene_plots(norm_counts, scale_mat, pheno,
                    gene_cluster_scores, score_thresh,
                    genes_of_interest,
                    out_dir = tempdir())
}
